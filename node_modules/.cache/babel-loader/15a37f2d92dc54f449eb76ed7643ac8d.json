{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\JavaScript\\\\Todo_App\\\\client\\\\src\\\\components\\\\TodoList\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './TodoList.css';\nimport Todo from '../Todo/Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [todoList, setTodoList] = useState([{\n    name: \"You have no todos yet!\"\n  }]);\n  const [refreshKey, setRefreshKey] = useState(0);\n  useEffect(() => {\n    axios('todo/', {\n      method: \"GET\"\n    }).then(res => {\n      setTodoList([...res.data]);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }, []);\n  console.log(\"Redering TodoList\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todolist\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: \"Things todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), todoList.map(item => /*#__PURE__*/_jsxDEV(Todo, {\n      name: item.name\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 35\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoList, \"h55LZbleNoKXfSCDyt1pibDpcz0=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Projects/JavaScript/Todo_App/client/src/components/TodoList/TodoList.js"],"names":["React","useState","useEffect","axios","Todo","TodoList","todoList","setTodoList","name","refreshKey","setRefreshKey","method","then","res","data","catch","err","console","log","message","map","item","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CAAC;AAAEO,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAD,CAAxC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,CAAD,CAA5C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAAC,OAAD,EAAU;AACXQ,MAAAA,MAAM,EAAE;AADG,KAAV,CAAL,CAEGC,IAFH,CAESC,GAAD,IAAS;AACbN,MAAAA,WAAW,CAAE,CAAC,GAAGM,GAAG,CAACC,IAAR,CAAF,CAAX;AACH,KAJD,EAIGC,KAJH,CAIUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACH,KAND;AAOH,GARQ,EAQN,EARM,CAAT;AASAF,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKZ,QAAQ,CAACc,GAAT,CAAaC,IAAI,iBAAI,QAAC,IAAD;AAAqB,MAAA,IAAI,EAAEA,IAAI,CAACb;AAAhC,OAAWa,IAAI,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA,YAArB,CALL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAvBD;;GAAMjB,Q;;KAAAA,Q;AAyBN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport './TodoList.css';\r\nimport Todo from '../Todo/Todo';\r\n\r\n\r\nconst TodoList = () => {\r\n    const [todoList, setTodoList] = useState([{ name: \"You have no todos yet!\" }]);\r\n    const [refreshKey, setRefreshKey] = useState(0);\r\n    useEffect(() => {\r\n        axios('todo/', {\r\n            method: \"GET\",\r\n        }).then((res) => {\r\n            setTodoList( [...res.data] );\r\n        }).catch((err) => {\r\n            console.log(err.message);\r\n        });\r\n    }, []);\r\n    console.log(\"Redering TodoList\");\r\n    return (\r\n        <div className='todolist'>\r\n            <div>\r\n                <div className='heading'>Things todo</div>\r\n                <button></button>\r\n            </div>\r\n            {todoList.map(item => <Todo key={item._id} name={item.name} />)}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}